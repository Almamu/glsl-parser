// Types
TYPE(eof)
TYPE(whitespace)
TYPE(comment)
TYPE(keyword)
TYPE(identifier)
TYPE(constant_int)
TYPE(constant_uint)
TYPE(constant_float)
TYPE(constant_double)
TYPE(operator)
TYPE(semicolon)
TYPE(scope_begin)
TYPE(scope_end)

// Keywords
KEYWORD(attribute)
KEYWORD(const)
KEYWORD(uniform)
KEYWORD(varying)
KEYWORD(coherent)
KEYWORD(volatile)
KEYWORD(restrict)
KEYWORD(readonly)
KEYWORD(writeonly)
KEYWORD(atomic_uint)
KEYWORD(layout)
KEYWORD(centroid)
KEYWORD(flat)
KEYWORD(smooth)
KEYWORD(noperspective)
KEYWORD(patch)
KEYWORD(sample)
KEYWORD(break)
KEYWORD(continue)
KEYWORD(do)
KEYWORD(for)
KEYWORD(while)
KEYWORD(switch)
KEYWORD(case)
KEYWORD(default)
KEYWORD(if)
KEYWORD(else)
KEYWORD(subroutine)
KEYWORD(in)
KEYWORD(out)
KEYWORD(inout)
KEYWORD(float)
KEYWORD(double)
KEYWORD(int)
KEYWORD(void)
KEYWORD(bool)
KEYWORD(true)
KEYWORD(false)
KEYWORD(invariant)
KEYWORD(discard)
KEYWORD(return)
KEYWORD(mat2)
KEYWORD(mat3)
KEYWORD(mat4)
KEYWORD(dmat2)
KEYWORD(dmat3)
KEYWORD(dmat4)
KEYWORD(mat2x2)
KEYWORD(mat2x3)
KEYWORD(mat2x4)
KEYWORD(dmat2x2)
KEYWORD(dmat2x3)
KEYWORD(dmat2x4)
KEYWORD(mat3x2)
KEYWORD(mat3x3)
KEYWORD(mat3x4)
KEYWORD(dmat3x2)
KEYWORD(dmat3x3)
KEYWORD(dmat3x4)
KEYWORD(mat4x2)
KEYWORD(mat4x3)
KEYWORD(mat4x4)
KEYWORD(dmat4x2)
KEYWORD(dmat4x3)
KEYWORD(dmat4x4)
KEYWORD(vec2)
KEYWORD(vec3)
KEYWORD(vec4)
KEYWORD(ivec2)
KEYWORD(ivec3)
KEYWORD(ivec4)
KEYWORD(bvec2)
KEYWORD(bvec3)
KEYWORD(bvec4)
KEYWORD(dvec2)
KEYWORD(dvec3)
KEYWORD(dvec4)
KEYWORD(uint)
KEYWORD(uvec2)
KEYWORD(uvec3)
KEYWORD(uvec4)
KEYWORD(lowp)
KEYWORD(mediump)
KEYWORD(highp)
KEYWORD(precision)
KEYWORD(sampler1D)
KEYWORD(sampler2D)
KEYWORD(sampler3D)
KEYWORD(samplerCube)
KEYWORD(sampler1DShadow)
KEYWORD(sampler2DShadow)
KEYWORD(samplerCubeShadow)
KEYWORD(sampler1DArray)
KEYWORD(sampler2DArray)
KEYWORD(sampler1DArrayShadow)
KEYWORD(sampler2DArrayShadow)
KEYWORD(isampler1D)
KEYWORD(isampler2D)
KEYWORD(isampler3D)
KEYWORD(isamplerCube)
KEYWORD(isampler1DArray)
KEYWORD(isampler2DArray)
KEYWORD(usampler1D)
KEYWORD(usampler2D)
KEYWORD(usampler3D)
KEYWORD(usamplerCube)
KEYWORD(usampler1DArray)
KEYWORD(usampler2DArray)
KEYWORD(sampler2DRect)
KEYWORD(sampler2DRectShadow)
KEYWORD(isampler2DRect)
KEYWORD(usampler2DRect)
KEYWORD(samplerBuffer)
KEYWORD(isamplerBuffer)
KEYWORD(usamplerBuffer)
KEYWORD(sampler2DMS)
KEYWORD(isampler2DMS)
KEYWORD(usampler2DMS)
KEYWORD(sampler2DMSArray)
KEYWORD(isampler2DMSArray)
KEYWORD(usampler2DMSArray)
KEYWORD(samplerCubeArray)
KEYWORD(samplerCubeArrayShadow)
KEYWORD(isamplerCubeArray)
KEYWORD(usamplerCubeArray)
KEYWORD(image1D)
KEYWORD(iimage1D)
KEYWORD(uimage1D)
KEYWORD(image2D)
KEYWORD(iimage2D)
KEYWORD(uimage2D)
KEYWORD(image3D)
KEYWORD(iimage3D)
KEYWORD(uimage3D)
KEYWORD(image2DRect)
KEYWORD(iimage2DRect)
KEYWORD(uimage2DRect)
KEYWORD(imageCube)
KEYWORD(iimageCube)
KEYWORD(uimageCube)
KEYWORD(imageBuffer)
KEYWORD(iimageBuffer)
KEYWORD(uimageBuffer)
KEYWORD(image1DArray)
KEYWORD(iimage1DArray)
KEYWORD(uimage1DArray)
KEYWORD(image2DArray)
KEYWORD(iimage2DArray)
KEYWORD(uimage2DArray)
KEYWORD(imageCubeArray)
KEYWORD(iimageCubeArray)
KEYWORD(uimageCubeArray)
KEYWORD(image2DMS)
KEYWORD(iimage2DMS)
KEYWORD(uimage2DMS)
KEYWORD(image2DMSArray)
KEYWORD(iimage2DMSArray)
KEYWORD(uimage2DMSArray)
KEYWORD(struct)
KEYWORD(common)         // Reserved keywords in GLSL follow
KEYWORD(partition)
KEYWORD(active)
KEYWORD(asm)
KEYWORD(class)
KEYWORD(union)
KEYWORD(enum)
KEYWORD(typedef)
KEYWORD(template)
KEYWORD(this)
KEYWORD(packed)
KEYWORD(resource)
KEYWORD(goto)
KEYWORD(inline)
KEYWORD(noinline)
KEYWORD(public)
KEYWORD(static)
KEYWORD(extern)
KEYWORD(external)
KEYWORD(interface)
KEYWORD(long)
KEYWORD(short)
KEYWORD(half)
KEYWORD(fixed)
KEYWORD(unsigned)
KEYWORD(superp)
KEYWORD(input)
KEYWORD(output)
KEYWORD(hvec2)
KEYWORD(hvec3)
KEYWORD(hvec4)
KEYWORD(fvec2)
KEYWORD(fvec3)
KEYWORD(fvec4)
KEYWORD(sampler3DRect)
KEYWORD(filter)
KEYWORD(sizeof)
KEYWORD(cast)
KEYWORD(namespace)
KEYWORD(using)
KEYWORD(row_major)

// Operators
OPERATOR(paranthesis_begin, "(")
OPERATOR(paranthesis_end, ")")
OPERATOR(bracket_begin, "[")
OPERATOR(bracket_end, "]")
OPERATOR(dot, ".")
OPERATOR(increment, "++")
OPERATOR(decrement, "--")
OPERATOR(plus, "+")
OPERATOR(minus, "-")
OPERATOR(bit_not, "~")
OPERATOR(logical_not, "!")
OPERATOR(multiply, "*")
OPERATOR(divide, "/")
OPERATOR(modulus, "%")
OPERATOR(shift_left, "<<")
OPERATOR(shift_right, ">>")
OPERATOR(less, "<")
OPERATOR(greater, ">")
OPERATOR(less_equal, "<=")
OPERATOR(greater_equal, ">=")
OPERATOR(equal, "==")
OPERATOR(not_equal, "!=")
OPERATOR(bit_and, "&")
OPERATOR(bit_xor, "^")
OPERATOR(bit_or, "|")
OPERATOR(logical_and, "&&")
OPERATOR(logical_xor, "^^")
OPERATOR(logical_or, "||")
OPERATOR(questionmark, "?")
OPERATOR(colon, ":")
OPERATOR(assign, "=")
OPERATOR(add_assign, "+=")
OPERATOR(sub_assign, "-=")
OPERATOR(multiply_assign, "*=")
OPERATOR(divide_assign, "/=")
OPERATOR(modulus_assign, "%=")
OPERATOR(shift_left_assign, "<<=")
OPERATOR(shift_right_assign, ">>=")
OPERATOR(bit_and_assign, "&=")
OPERATOR(bit_xor_assign, "^=")
OPERATOR(bit_or_assign, "|=")
OPERATOR(comma, ",")
